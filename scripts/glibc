#!/bin/bash

#version 2.28

extract $0 &&
if [ $1 -eq 2 ]; then #second pass
    patch -Np1 -i ../glibc-2.28-fhs-1.patch &&
    ln -svf /tools/lib/gcc /usr/lib &&
    GCC_INCDIR=/usr/lib/gcc/x86_64-pc-linux-gnu/8.2.0/include &&
    ln -svf /lib/ld-linux-x86-64.so.2 /lib64 &&
    ln -svf /lib/ld-linux-x86-64.so.2 /lib64/ld-lsb-x86-64.so.3 &&
    rm -vf /usr/include/limits.h
fi &&
mkdir -pv build &&
pushd build &&
if [ $1 -eq 1 ]; then #first pass
    ../configure --prefix=/tools --host=$LFS_TGT --build=$(../scripts/config.guess) --enable-kernel=3.2 --with-headers=/tools/include libc_cv_forced_unwind=yes libc_cv_c_cleanup=yes
elif [ $1 -eq 2 ]; then #second pass
    export CC="gcc -isystem $GCC_INCDIR -isystem /usr/include" &&
    ../configure --prefix=/usr --disable-werror --enable-kernel=3.2 --enable-stack-protector=strong libc_cv_slibdir=/lib
fi &&
make -j $procs &&
if [ $1 -eq 2 ]; then #second pass
    make -j $procs check &&
    touch /etc/ld.so.conf &&
    sed '/test-installation/s@$(PERL)@echo not running@' -i ../Makefile
fi &&
make -j $procs install &&
if [ $1 -eq 1 ]; then #first pass
    echo 'int main(){}' > dummy.c &&
    ${LFS_TGT}-gcc dummy.c &&
    if [[ ! $(readelf -l a.out | grep ': /tools') =~ /tools/lib64/ld-linux-x86-64\.so\.2 ]]; then echo 'Toolchain is not working as expected!'; exit 1; fi &&
    rm -vf dummy.c a.out
elif [ $1 -eq 2 ]; then #second pass
    cp -v ../nscd/nscd.conf /etc/nscd.conf &&
    mkdir -pv /var/cache/nscd &&
    mkdir -pv /usr/lib/locale &&
    #install locales for test suites
    localedef -i cs_CZ -f UTF-8 cs_CZ.UTF-8 &&
    localedef -i de_DE -f ISO-8859-1 de_DE &&
    localedef -i de_DE@euro -f ISO-8859-15 de_DE@euro &&
    localedef -i de_DE -f UTF-8 de_DE.UTF-8 &&
    localedef -i en_GB -f UTF-8 en_GB.UTF-8 &&
    localedef -i en_HK -f ISO-8859-1 en_HK &&
    localedef -i en_PH -f ISO-8859-1 en_PH &&
    localedef -i en_US -f ISO-8859-1 en_US &&
    localedef -i en_US -f UTF-8 en_US.UTF-8 &&
    localedef -i es_MX -f ISO-8859-1 es_MX &&
    localedef -i fa_IR -f UTF-8 fa_IR &&
    localedef -i fr_FR -f ISO-8859-1 fr_FR &&
    localedef -i fr_FR@euro -f ISO-8859-15 fr_FR@euro &&
    localedef -i fr_FR -f UTF-8 fr_FR.UTF-8 &&
    localedef -i it_IT -f ISO-8859-1 it_IT &&
    localedef -i it_IT -f UTF-8 it_IT.UTF-8 &&
    localedef -i ja_JP -f EUC-JP ja_JP &&
    localedef -i ru_RU -f KOI8-R ru_RU.KOI8-R &&
    localedef -i ru_RU -f UTF-8 ru_RU.UTF-8 &&
    localedef -i tr_TR -f UTF-8 tr_TR.UTF-8 &&
    localedef -i zh_CN -f GB18030 zh_CN.GB18030 &&
    #install my own country locales
    #supported locales can be found in glibc-2.28/localedata/SUPPORTED
    localedef -i en_CA -f UTF-8 en_CA.UTF-8 &&
    localedef -i en_CA -f ISO-8859-1 en_CA &&
    localedef -i fr_CA -f UTF-8 fr_CA.UTF-8 &&
    localedef -i fr_CA -f ISO-8859-1 fr_CA &&
    cp -v /alfs/etc/nsswitch.conf /etc/nsswitch.conf &&
    tar -xvf /sources/$(find_archive tzdata) &&
    ZONEINFO=/usr/share/zoneinfo &&
    mkdir -pv ${ZONEINFO}/{posix,right} &&
    for tz in etcetera southamerica northamerica europe africa antarctica asia australasia backward pacificnew systemv
    do
	zic -L /dev/null -d $ZONEINFO -y "sh yearistype.sh" $tz &&
        zic -L /dev/null -d ${ZONEINFO}/posix -y "sh yearistype.sh" $tz &&
        zic -L leapseconds -d ${ZONEINFO}/right -y "sh yearistype.sh" $tz || exit 1
    done &&
    cp -v zone.tab zone1970.tab iso3166.tab $ZONEINFO &&
    zic -d $ZONEINFO -p America/New_York &&
    #install the time zone dor your location
    #you may use the command tzselect to help you choose the right time zone
    #other possibilities can be found in /usr/share/zoneinfo
    cp -v /usr/share/zoneinfo/America/Montreal /etc/localtime &&
    cp -v /alfs/etc/ld.so.conf /etc/ld.so.conf &&
    mkdir -pv /etc/ld.so.conf.d
fi &&
remove $0
