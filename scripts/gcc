#!/bin/bash

#version 8.2.0

extract $0 &&
if [ $1 -eq 2 ]; then #second pass
    cat gcc/limitx.h gcc/glimits.h gcc/limity.h > $(dirname $(${LFS_TGT}-gcc -print-libgcc-file-name))/include-fixed/limits.h
fi &&
if [ $1 -eq 1 -o $1 -eq 2 ]; then #first/second pass
    #unpack mpfr,gmp,mpc and rename them so gcc build will use them
    tar -xvf ../$(find_archive mpfr) &&
    mv -v $(tar_root mpfr) mpfr &&
    tar -xvf ../$(find_archive gmp) &&
    mv -v $(tar_root gmp) gmp &&
    tar -xvf ../$(find_archive mpc) &&
    mv -v $(tar_root mpc) mpc &&
    #change default dynamic linker to the one in tools
    #remove /usr/include from include search path
    for file in gcc/config/{linux,i386/linux{,64}}.h
    do
	cp -v ${file}{,.orig} && #backup files
	sed -i -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' -e 's@/usr@/tools@g' $file && #prepend /tools to /lib/ld, /lib64/ld and /lib32/ld and replace /usr with /tools
	echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file || exit 1
    done &&
fi &&
sed -i -e '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64 && #change 64-bit libraries default directory to lib
mkdir -pv build &&
pushd build &&
if [ $1 -eq 1 ]; then #first pass
    ../configure --target=$LFS_TGT --prefix=/tools --with-glibc-version=2.11 --with-sysroot=$wdir --with-newlib --without-headers --with-local-prefix=/tools --with-native-system-header-dir=/tools/include --disable-nls --disable-shared --disable-multilib --disable-decimal-float --disable-threads --disable-libatomic --disable-libgomp --disable-libmpx --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx --enable-languages=c,c++
elif [ $1 -eq 2 ]; then #second pass
    export CC=${LFS_TGT}-gcc CXX=${LFS_TGT}-g++ AR=${LFS_TGT}-ar RANLIB=${LFS_TGT}-ranlib &&
    ../configure --prefix=/tools --with-local-prefix=/tools --with-native-system-header-dir=/tools/include --enable-languages=c,c++ --disable-libstdcxx-pch --disable-multilib --disable-bootstrap --disable-libgomp
elif [ $1 -eq 3 ]; then #third pass
    rm -vf /usr/lib/gcc &&
    export SED=sed &&
    ../configure --prefix=/usr --enable-languages=c,c++ --disable-multilib --disable-bootstrap --disable-libmpx --with-system-zlib &&
fi &&
make -j $procs &&
if [ $1 -eq 3 ]; then #third pass
    ulimit -s 32768 &&
    rm ../gcc/testsuite/g++.dg/pr83239.C &&
    chown -Rv nobody . &&
    su nobody -s /bin/bash -c "PATH=$PATH make -j $procs -k check" &&
    ../contrib/test_summary | grep -A7 Summ &&
    echo 'test summaries can be compared with those located at http://www.linuxfromscratch.org/lfs/build-logs/8.3/' &&
    read -p 'is the above test summaries correct? (y/n) ' result &&
    if [ $result != 'y' ]; then exit 1; fi
fi &&
make -j $procs install &&
if [ $1 -eq 2 ]; then #second pass
    ln -sv gcc /tools/bin/cc &&
    echo 'int main(){}' > dummy.c &&
    cc dummy.c &&
    if [[ ! $(readelf -l a.out | grep ': /tools') =~ /tools/lib64/ld-linux-x86-64\.so\.2 ]]; then echo 'Toolchain is not working as expected!'; exit 1; fi &&
    rm -v dummy.c a.out
elif [ $1 -eq 3 ]; then #third pass
    ln -sv /usr/bin/cpp /lib &&
    ln -sv gcc /usr/bin/cc &&
    install -v -dm755 /usr/lib/bfd-plugins &&
    ln -sfv /usr/libexec/gcc/$(gcc -dumpmachine)/8.2.0/liblto_plugin.so /usr/lib/bfd-plugins/ &&
    echo 'int main(){}' > dummy.c &&
    cc dummy.c -v -Wl,--verbose &> dummy.log &&
    if [[ ! $(readelf -l a.out | grep ': /lib') =~ /lib64/ld-linux-x86-64\.so\.2 ]]; then echo 'Toolchain is not working as expected!'; exit 1; fi &&
    if [[ ! $(grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log) =~ /usr/lib64.*/crt1\.o\ succeeded[[:space:]]/usr/lib64.*/crti\.o\ succeeded[[:space:]]/usr/lib64.*/crtn\.o\ succeeded ]]; then echo 'Incorrect start files!'; exit 1; fi &&
    if [[ ! $(grep -B4 '^ /usr/include' dummy.log) =~ \#include\ \<\.\.\.\>\ search\ starts\ here:[[:space:]]*/usr/lib64/gcc/x86_64-pc-linux-gnu/8\.2\.0/include[[:space:]]*/usr/local/include[[:space:]]*/usr/lib64/gcc/x86_64-pc-linux-gnu/8\.2\.0/include-fixed[[:space:]]*/usr/include ]]; then echo 'Incorrect compiler header files!'; exit 1; fi &&
    if [[ ! $(grep 'SEARCH.*/usr/lib' dummy.log | sed 's|; |\n|g') =~ SEARCH_DIR\(\"/usr/x86_64-pc-linux-gnu/lib64\"\)[[:space:]]SEARCH_DIR\(\"/usr/local/lib64\"\)[[:space:]]SEARCH_DIR\(\"/lib64\"\)[[:space:]]SEARCH_DIR\(\"/usr/lib64\"\)[[:space:]]SEARCH_DIR\(\"/usr/x86_64-pc-linux-gnu/lib\"\)[[:space:]]SEARCH_DIR\(\"/usr/local/lib\"\)[[:space:]]SEARCH_DIR\(\"/lib\"\)[[:space:]]SEARCH_DIR\(\"/usr/lib\"\)\; ]]; then echo 'Incorrect linker search paths!'; exit 1; fi &&
    if [[ ! $(grep "/lib.*/libc.so.6 " dummy.log) =~ attempt\ to\ open\ /lib64/libc\.so\.6\ succeeded ]]; then echo 'Incorrect libc!'; exit 1; fi &&
    if [[ ! $(grep found dummy.log) =~ found\ ld-linux-x86-64\.so\.2\ at\ /lib/ld-linux-x86-64\.so\.2 ]]; then echo 'Incorrect GCC dynamic linker!'; exit 1; fi &&
    rm -v dummy.c a.out dummy.log &&
    mkdir -pv /usr/share/gdb/auto-load/usr/lib &&
    mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib
fi &&
remove $0
